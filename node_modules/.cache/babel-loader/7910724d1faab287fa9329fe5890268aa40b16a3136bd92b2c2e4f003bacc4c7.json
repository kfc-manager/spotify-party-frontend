{"ast":null,"code":"var _jsxFileName = \"/Users/kiliancalefice/Desktop/spotify-party-frontend/src/components/Track/Track.js\";\nimport axios from \"axios\";\nimport buttonIcon from \"./button.jpeg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction toMinutes(duration_ms) {\n  let minutes = Math.floor(duration_ms / 60000);\n  let seconds = duration_ms % 60000 + \"\";\n  while (seconds.length < 5) {\n    seconds = \"0\" + seconds;\n  }\n  return minutes + \":\" + seconds.slice(0, 2);\n}\nfunction artistString(artists) {\n  let str = artists[0];\n  for (let i = 1; i < artists.length; i++) {\n    str = str + \", \" + artists[i];\n  }\n  return str;\n}\nfunction addToQueue(trackID) {\n  axios.get(\"/queue/add\", {\n    params: {\n      track: trackID\n    }\n  }).catch(error => {\n    console.log(error);\n  });\n}\nexport default function Track(_ref) {\n  let {\n    track,\n    isQueue\n  } = _ref;\n  if (isQueue) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"track\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"icon\",\n        src: track.image,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"name\",\n          children: track.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"artists\",\n          children: artistString(track.artists)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"duration\",\n        children: toMinutes(track.duration)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"track\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"icon\",\n      src: track.image,\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"name\",\n        children: track.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"artists\",\n        children: artistString(track.artists)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"duration\",\n      children: toMinutes(track.duration)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"addButton\",\n      onClick: () => {\n        addToQueue(track.id);\n      },\n      src: buttonIcon,\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 7\n  }, this);\n}\n_c = Track;\nvar _c;\n$RefreshReg$(_c, \"Track\");","map":{"version":3,"names":["axios","buttonIcon","toMinutes","duration_ms","minutes","Math","floor","seconds","length","slice","artistString","artists","str","i","addToQueue","trackID","get","params","track","catch","error","console","log","Track","isQueue","image","name","duration","id"],"sources":["/Users/kiliancalefice/Desktop/spotify-party-frontend/src/components/Track/Track.js"],"sourcesContent":["import axios from \"axios\";\nimport buttonIcon from \"./button.jpeg\";\n\nfunction toMinutes(duration_ms) {\n    let minutes = Math.floor(duration_ms/60000);\n    let seconds = (duration_ms%60000) + \"\";\n\n    while (seconds.length < 5) {\n        seconds = \"0\" + seconds;\n    }\n\n    return minutes + \":\" + seconds.slice(0,2);\n}\n\nfunction artistString(artists) {\n    let str = artists[0];\n    for (let i = 1; i < artists.length; i++) {\n        str = str + \", \" + artists[i];\n    }\n    return str;\n}\n\nfunction addToQueue(trackID) {\n    axios.get(\"/queue/add\", { \n      params: { track: trackID }\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n}\n\nexport default function Track({ track, isQueue }) {\n    if (isQueue) {\n        return (\n            <div className=\"track\">\n              <img className=\"icon\" src={ track.image } alt=''/>\n              <div className=\"container\">\n                <div className=\"name\">{ track.name }</div>\n                <div className=\"artists\">{ artistString(track.artists) }</div>\n              </div>\n              <div className=\"duration\">{ toMinutes(track.duration) }</div>\n            </div>\n          )\n    }\n    return (\n      <div className=\"track\">\n        <img className=\"icon\" src={ track.image } alt=''/>\n        <div className=\"container\">\n          <div className=\"name\">{ track.name }</div>\n          <div className=\"artists\">{ artistString(track.artists) }</div>\n        </div>\n        <div className=\"duration\">{ toMinutes(track.duration) }</div>\n        <img className=\"addButton\" onClick={() => {addToQueue(track.id)}} src={buttonIcon} alt=\"\"/>\n      </div>\n    )\n  }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}